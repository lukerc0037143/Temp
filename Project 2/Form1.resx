<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        pKK+ru6niErp7rvvtlGchKKk3uMbb7zRSkWPpllZE+0XW0kC0HHW7Nm2XEm9ypJlcA8dN23abNscVa4o
        cvnyFfba4HrJf9CgQbZcEeKMGTPC1w/S3//+91B8igIlmuAeSqtWrQrbNxWhapxjcK3eg95Tf9cLrp9D
        bZmJ70H369Spky2vUKGCadOmTdJnp2PUuY6J5xo6FPzO8v/udNT9g2sSk+9eUamwulHlwbmOwbn+8D33
        3HPuWxIvkGMCmhan9jO1kyUeo851jDqPyos6L6zclzS7Q9HTrl27wuSrF6Sivu5//vMfK7XLL7/cTrfL
        zyuvvGLbIyWOc89taiONQH56DG2bIwJJST3Uc+fOdVcdQXUV1QVtgbfcemseeaptU1Gjypo3b+6dlaPX
        UZleR3JbtGhRKD8lRae6XuU//elP3VV5WbgwN3pUndat2+REp9vC96D3LSnqHpdddplt68z/2ekYda5j
        /vPgd5b4uwvO9TsN6iWmqHv5UmF1o8qDcx0Tz/U5xBHkCAWiL0bUl0P5ffv2dfIpbR566P/Cuo89/njY
        2XHllVdGzmNeu3ZtOGNFYxDVky3Urtm373U2X1FjQY92GqAetmt27Rq2a27cuCkcNH7qqadGzshRW2LY
        I2/bHrPtz6GosnefPvbn05Chx3N+JogPyBGOCrVLKrKSWBo2PMvs3Jkb/Vx00UU2T22Bc+bMcbWTyR/d
        3Tb0dvvIvmzZazbiVF6jRo1sBBOF2gnVtqm6ei/z5s939z3S1jh8+HCbF8VLL70Ujt9s1qy5jeRWrFyZ
        I9fqLq+ZzYP4gBzhqFDUpehRApJEJkzICnuo9e/vfe97NgosCD2yq+1R91CEt2rVatMnJ2IL7jlp0iRX
        MxqNU1SkqvrquX7//TWmjuuh1r0/+OADV9OPfg6Nl9T1uiY7e4q57bah9lzR5Lhx41xNiAvIEY4azV4J
        eq4lpOYtWthzRWJqA0wFDaOSiJQ0eyV4TFZ7YioRm+qcf/759nWDWTiB2EaMGOFqFcy//vWvsGe8Vo5Q
        g6FGWgGIGTTxAznCUaM2vmDecxB56ajlyaLaK/OjYSxB9Bhcn9v+Fz32MD/5F8dQ0j3VsZQKto3RjakM
        3oOSHskhfiBHOCaoZ1nLkAVyVNSo8YGpovZAzWJJFJOGKhVl3Ui1S2q1oOAeSkUVm95zMCNI70E/k4YD
        QfxAjnBMUITYr18/G+1JLGq/K6ytMT+Jay0qAszOznYlqTNz5szwPainWmMli4Ki4F69cueO6z433HBD
        LGfGAHKEY8hbb71l5aapesVdpfvBBx+0UtPA6+Ks0q3oUZ1Aivh+/etfu9yioTbUunXrmgYNGtgZOhBP
        kCMcUzSWUHOXCxo2UxCKNjXWMZWl0KLQ0B7dQ22IxUXzsTUGs7g/B5z4IEcAAA/IEQDAA3IEAPCAHAEA
        PCBHAAAPyBEAwANyhLTk2WeftQvdajB5x44d7So/WldywIABdtV2LUILUJIgR0hLtGWFZrkE0/iCcyXN
        XNG2DakuagFQHJAjpCWJcuzcubO555577B4uWrY/kKW2HCjOLBqAVECOkJYkylFiDNDsm+rVq9t8LWzL
        ohBQUiBHSEui5Ci0MrjytfKP5nMDlATIEdISnxy1fYLaGYPNsLSkGYvQQkmBHCEtSZRj+/btzU9+8hNz
        7bXX2m0U1OZYs2ZN8/TTT7vaAMce5AhpSaIc8/dWa0uG2bNnp7zKOEBxQI6QliTKUZvLDx482LRu3Trc
        uEvjHrdu3epqAxx7kCOkJb42R216f/HFF1s5aqxjKrsSAhQX5AhpiU+OYvz48eE2CD169Ag38Ac41iBH
        SEui5Lh8+XJTvnx5m6+tDLZs2eJKAI4tyBHSkig5ausDTR1UviLIefPmuRKAYwtyhLRk7NixpmnTpjbl
        37t61KhRYZk25AIoCZAjpCUHDhywG2UpHTx40OXmon8HZdptEKAkQI4AAB6QIwCAB+QIAOABOQIAeECO
        AAAekCMAgAfkCADgATkCAHhAjgAAHpAjAIAH5AgA4AE5AgB4QI4AAEkY8/9mMIwXqSA4HgAAAABJRU5E
        rkJggg==
</value>
  </data>
</root>